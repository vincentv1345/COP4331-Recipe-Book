Index: mobile/lib/screens/AddScreen.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\nimport 'package:mobile/screens/LoginScreen.dart';\nimport 'package:image_picker/image_picker.dart';\nimport 'package:mobile/utils/getAPI.dart';\nimport 'dart:convert';\nimport 'dart:async';\nimport 'dart:io';\nimport 'image.dart';\n\nimport '../main.dart';\nimport 'CreateAccount.dart';\nimport 'HomeScreen.dart';\nimport 'Profile.dart';\n\n\nString message = \"help\", newMessageText = ''; //error messages\nString loginName = '', email = '', password = '';\nString recipeName = '',recipeingredients = '', directions = '', imageInput='';\nbool isChecked = false;\n\n\nclass AddScreen extends StatefulWidget {\n  @override\n  _AddScreenState createState() => _AddScreenState();\n}\n\nclass _AddScreenState extends State<AddScreen> {\n  @override\n  File? image;\n\n  Future selectImage() async {\n    try {\n      final image = await ImagePicker().pickImage(source: ImageSource.gallery);\n      if (image == null) {\n        return;\n      }\n      final imageTemp = File(image.path);\n      List<int> imageBytes = await image.readAsBytes();\n      final len = imageBytes.length;\n      final kb = len / 1024;\n      final mb = kb / 1024;\n      if (mb > 8) {\n        throw (\"Image Too Big\");\n      }\n      String imageBase64Temp = base64Encode(imageBytes);\n      setState(() {\n        this.image = imageTemp;\n        imageInput = imageBase64Temp;\n      });\n    } on Exception catch (error) {\n      debugPrint(\"Failed to select image: $error\");\n    }\n  }\n\n  void initState() {\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      //   backgroundColor: Colors.blue,\n      body: MainPage(),\n    );\n  }\n}\n\nclass MainPage extends StatefulWidget {\n  @override\n  _MainPageState createState() => _MainPageState();\n}\n\n\nclass _MainPageState extends State<MainPage> {\n\n  // late final List<ListItem> items;\n\n\n  changeText() {\n    setState(() {\n      message = newMessageText;\n    });\n  }\n\n  @override\n  void initState() {\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n        padding: EdgeInsets.fromLTRB(10, 0, 10, 0),\n        decoration: const BoxDecoration(\n          image: DecorationImage(image: AssetImage(\"lib/assets/add.png\"), fit: BoxFit.cover),\n        ),\n        width:  MediaQuery.of(context).size.width,\n        height: MediaQuery.of(context).size.height,\n        child:\n        SingleChildScrollView(\n            child:\n\n            Column(\n              mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n              crossAxisAlignment: CrossAxisAlignment.center, //Center Column contents horizontal\n\n              children: <Widget>[\n\n                Container(\n                  margin: const EdgeInsets.only(top: 60, left: 0,),\n\n                  child:\n                  Row(\n                    children: <Widget>[\n\n                      Column(\n                          children:<Widget>[\n\n                            const SizedBox(width: 16),\n\n                            FloatingActionButton.small(\n                              backgroundColor: Color(0xff5F2829),\n                              onPressed: () {\n                                Navigator.push(context, new MaterialPageRoute(\n                                    builder: (context) => new HomeScreen())\n                                );\n                              },\n                              child: const Icon(Icons.home),\n                            ),\n                          ]\n                      ),\n\n                      Column(\n                          children:<Widget>[\n\n                            const SizedBox(width: 16),\n\n                            FloatingActionButton.small(\n                              backgroundColor: Color(0xff5F2829),\n                              onPressed: () {\n                                Navigator.push(context, new MaterialPageRoute(\n                                    builder: (context) => new ProfileScreen())\n                                );\n                              },\n                              child: const Icon(Icons.add),\n                            ),\n                          ]\n                      ),\n\n                      Column(\n                          children:<Widget>[\n\n                            const SizedBox(width: 16),\n\n                            FloatingActionButton.small(\n                              backgroundColor: Color(0xff5F2829),\n                              onPressed: () {\n                                // Add your onPressed code here!\n                                Navigator.push(context, new MaterialPageRoute(\n                                    builder: (context) => new ProfileScreen())\n                                );\n                              },\n                              child: const Icon(Icons.person),\n                            ),\n                          ]\n                      ),\n                    ],\n                  ), //buttons\n                ),\n\n\n                Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    crossAxisAlignment: CrossAxisAlignment.center,\n                    children: <Widget>[\n\n                      const SizedBox(height: 20.0),\n                      MaterialButton(\n                        color: Colors.blue,\n                        child: const Text(\n                          \"Select Image from Gallery\",\n                        ),\n                        onPressed: () {\n                          selectImage();\n                        },\n                      ),\n\n                      /*Container(\n                          padding: EdgeInsets.all(0), // Border width\n                          decoration: BoxDecoration(color: Colors.transparent,),\n                          alignment: Alignment.topLeft,\n                          margin: const EdgeInsets.only(top: 40,right: 15,bottom: 40),\n                          width: MediaQuery.of(context).size.width-300,\n                          height: 100,\n\n                          child: ClipRRect(\n                            borderRadius: BorderRadius.circular(8.0),\n\n                            child: Image.asset(\n                              'lib/assets/.png',\n                              width: 200.0,\n                              height: 200.0,\n                              fit: BoxFit.fitWidth,\n                              scale: 1,\n                            ),\n                          )\n                      ),*/\n                      Row(\n                        children: <Widget>[\n                      SizedBox(\n                        width: 200,\n                        height: 50,\n\n                        child:\n                        TextFormField(\n                          keyboardType: TextInputType.multiline,\n                          maxLines: 1,\n                          autofocus: false,\n                          decoration: InputDecoration(\n                            filled: true,\n                            fillColor: Colors.white,\n                            hintText: \"enter recipe name\",\n                            hintStyle: TextStyle(fontStyle: FontStyle.italic),\n                            alignLabelWithHint: true,\n                            border:  OutlineInputBorder(\n                                borderRadius: BorderRadius.circular(10.0),\n                                borderSide: BorderSide(\n                                  color: Colors.black,\n                                ))),\n                          onChanged:(text){\n                            recipename = text;\n                            print(recipename);\n                          }\n\n                        ),\n                      ),\n                      ]),\n\n\n\n                    ]\n                ),\n                SizedBox(height:0),\n                SizedBox(\n                  width: 400,\n\n                  child: TextFormField(\n                    keyboardType: TextInputType.multiline,\n                    maxLines: 6,\n                    autofocus: false,\n                  decoration: InputDecoration(\n                    filled: true,\n                    fillColor: Colors.white,\n                    hintText: \"enter required ingredients\",\n                    hintStyle: TextStyle(fontStyle: FontStyle.italic),\n                      alignLabelWithHint: true,\n                      border:  OutlineInputBorder(\n                      borderRadius: BorderRadius.circular(10.0),\n                      borderSide: BorderSide(\n                        color: Colors.black,\n                      ))),\n                    onChanged: (text){\n                      recipeingredients = text;\n                      print(recipeingredients);\n                      print(GlobalData.userId);\n                    },\n                ),\n                ),\n                SizedBox(height:10),\n\n                SizedBox(\n                  width: 400,\n                  child: TextFormField(\n                    keyboardType: TextInputType.multiline,\n                    maxLines: 6,\n                    autofocus: false,\n                    decoration: InputDecoration(\n                      filled: true,\n                      fillColor: Colors.white,\n                      hintText: \"enter recipe directions\",\n                      hintStyle: TextStyle(fontStyle: FontStyle.italic),\n                      alignLabelWithHint: true,\n                      border:  OutlineInputBorder(\n                          borderRadius: BorderRadius.circular(10.0),\n                          borderSide: BorderSide(\n                            color: Colors.black,\n                          ))),\n                      onChanged:(text){\n                        directions = text;\n                        print(directions);\n                      }\n\n\n                  ),\n                ),\n                SizedBox(height:10),\n\n              /*  SizedBox(\n                  width: 400,\n\n                  child: TextFormField(\n                      keyboardType: TextInputType.multiline,\n                      maxLines: 1,\n\n                      autofocus: false,\n                      decoration: InputDecoration(\n                          filled: true,\n                          fillColor: Colors.white,\n                          hintText: \"enter descriptive hashtags\",\n                          hintStyle: TextStyle(fontStyle: FontStyle.italic),\n                          alignLabelWithHint: true,\n\n                          border:  OutlineInputBorder(\n                              borderRadius: BorderRadius.circular(10.0),\n                              borderSide: BorderSide(\n                                color: Colors.black,\n\n                              ))),\n                      onChanged:(text){\n                        directions = text;\n                        print(directions);\n                      }\n\n\n                  ),\n                ), */\n\n\n            Row(\n              children: <Widget>[\n\n                /*\n                Padding(\n                  padding: EdgeInsets.only(left:35, bottom: 10, right: 0, top:10), //apply padding to some sides only\n                  child:\n                  Text(\n                    'Check for public:',\n                    textAlign: TextAlign.center,\n                    overflow: TextOverflow.ellipsis,\n                    style: const TextStyle(fontSize: 20,fontWeight: FontWeight.bold),\n\n                  ),\n                ),\n\n\n              Checkbox(\n\n              value: isChecked,\n              onChanged: (bool? value) { // This is where we update the state when the checkbox is tapped\n                setState(() {\n                  isChecked = value!;\n                });\n              },\n            ), */\n\n\n                Container(\n                //  margin: const EdgeInsets.only(top: 10, left: 250,right:5),\n                  width: MediaQuery.of(context).size.width - 20,\n                  child:\n                  MaterialButton(\n                      child: Text('Create',style: TextStyle(fontSize: 18 ,color:Color(0xffffffff))\n                      ),\n\n                      onPressed: () async {\n                        try{\n                          bool isPublic = isChecked;\n                          print(isPublic);\n\n                          newMessageText = \"\";\n                          changeText();\n                          //var userId = 'car';\n                          await RecipeData.create(recipename.trim(), recipeingredients.trim(),directions.trim(),isPublic,GlobalData.userId);\n                          Navigator.push(context, new MaterialPageRoute(\n                              builder: (context) => new ProfileScreen())\n                          );\n\n\n                        }catch(e){\n\n                        }\n                      },\n\n                      color:const Color(0xff5F2829),\n                      shape: RoundedRectangleBorder(borderRadius:BorderRadius.circular(22.0) ),\n                      textColor: Color(0xffF9DEE8),\n                      padding: EdgeInsets.all(2.0),\n                      splashColor: Colors.black\n                  ),\n                ),\n            ]),\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              ],\n            )\n        )\n    );\n  }\n\n\n\n\n\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mobile/lib/screens/AddScreen.dart b/mobile/lib/screens/AddScreen.dart
--- a/mobile/lib/screens/AddScreen.dart	(revision 123bf33ea9be1bb7796079dd5b2597a863474d97)
+++ b/mobile/lib/screens/AddScreen.dart	(date 1670350419851)
@@ -26,31 +26,6 @@
 
 class _AddScreenState extends State<AddScreen> {
   @override
-  File? image;
-
-  Future selectImage() async {
-    try {
-      final image = await ImagePicker().pickImage(source: ImageSource.gallery);
-      if (image == null) {
-        return;
-      }
-      final imageTemp = File(image.path);
-      List<int> imageBytes = await image.readAsBytes();
-      final len = imageBytes.length;
-      final kb = len / 1024;
-      final mb = kb / 1024;
-      if (mb > 8) {
-        throw ("Image Too Big");
-      }
-      String imageBase64Temp = base64Encode(imageBytes);
-      setState(() {
-        this.image = imageTemp;
-        imageInput = imageBase64Temp;
-      });
-    } on Exception catch (error) {
-      debugPrint("Failed to select image: $error");
-    }
-  }
 
   void initState() {
     super.initState();
@@ -181,7 +156,7 @@
                           "Select Image from Gallery",
                         ),
                         onPressed: () {
-                          selectImage();
+
                         },
                       ),
 
Index: mobile/lib/utils/getAPI.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\nimport 'dart:convert';\nimport 'package:http/http.dart' as http;\nimport 'dart:async';\n\nclass RecipeData {\n\n  int userId;\n  String RecipeName = '';\n\n  RecipeData({\n    required this.RecipeName,\n    required this.userId,\n  });\n\n\n  //complete API request for login\n  static Future<dynamic> login(String username, String password) async {\n\n    final response = await http.post(\n      Uri.parse('https://recipebook5959.herokuapp.com/api/login'),\n      headers: <String, String>{\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: jsonEncode(<String, String>{\n        \"Username\": username,\n        \"Password\": password,\n      }),\n    );\n\n    if (response.statusCode == 200 || response.statusCode == 201) {\n      // If the server did return a 201 CREATED response,\n      // then parse the JSON.\n      print(\"User Found ${response.statusCode}! ${response.body}\");\n      return (jsonDecode(response.body));\n    } else {\n      print(\"Error logging in ${response.statusCode}! ${response.body}\");\n      // If the server did not return a 201 CREATED response,\n      // then throw an exception.\n      throw Exception('Failed to LOGIN');\n    }\n  }\n\n  static Future<dynamic> signup(String email, String username, String password) async {\n\n    final response = await http.post(\n      Uri.parse('https://recipebook5959.herokuapp.com/api/create_user'),\n      headers: <String, String>{\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: jsonEncode(<String, String>{\n        \"Email\": email,\n        \"Username\": username,\n        \"Password\": password,\n      }),\n    );\n\n    if (response.statusCode == 200 || response.statusCode == 201) {\n      // If the server did return a 201 CREATED response,\n      // then parse the JSON.\n      print(\"User Created ${response.statusCode}! ${response.body}\");\n      return (jsonDecode(response.body));\n    } else {\n      print(\"Error creating user ${response.statusCode}! ${response.body}\");\n      // If the server did not return a 201 CREATED response,\n      // then throw an exception.\n      throw Exception('Failed to CREATE USER');\n    }\n  }\n  static Future<dynamic> create(String recipeName, String recipeIngredients,\n      String directions, bool isPublic, String UserID) async\n  {\n    final response = await http.post(\n      Uri.parse('https://recipebook5959.herokuapp.com/api/create_recipe'),\n      headers: <String, String>{\n        'Content-Type': 'application/json; charset=UTF-8',\n\n      },\n      body: jsonEncode({\n        'RecipeName' : recipeName,\n        'RecipeIngredients' : recipeIngredients,\n        'RecipeDirections' : directions,\n        'IsPublic' : isPublic,\n        'UserID': UserID,\n\n      }),\n    );\n\n    if (response.statusCode == 200 || response.statusCode == 201) {\n      // If the server did return a 201 CREATED response,\n      // then parse the JSON.\n      print(\"Recipe created ${response.statusCode}! ${response.body}\");\n      return (jsonDecode(response.body));\n    } else {\n      print(\"Error creating recipe ${response.statusCode}! ${response.body}\");\n      // If the server did not return a 201 CREATED response,\n      // then throw an exception.\n      throw Exception('Failed to CREATE Recipe');\n    }\n\n  }\n  static Future<dynamic> edit(String bio, String newID,String id) async {\n\n    final response = await http.patch(\n      Uri.parse('https://recipebook5959.herokuapp.com/api/update_user'),\n      headers:<String,String> {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: jsonEncode({\n        \"id\" : id,\n        \"Bio\": bio,\n        \"Username\": newID,\n      }),\n    );\n\n    if (response.statusCode == 200 || response.statusCode == 201) {\n      // If the server did return a 201 CREATED response,\n      // then parse the JSON.\n      print(\"User updated ${response.statusCode}\");\n      return (jsonDecode(response.body));\n    } else {\n      print(\"Error updating user ${response.statusCode}! ${response.body}\");\n      // If the server did not return a 201 CREATED response,\n      // then throw an exception.\n      throw Exception('Failed to update user');\n    }\n  }\n\n  static Future<List> search(String RecipeName) async {\n\n    final response = await http.post(\n      Uri.parse('https://recipebook5959.herokuapp.com/api/search_recipe'),\n      headers:<String,String> {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: jsonEncode({\n        \"RecipeName\": RecipeName,\n      }),\n    );\n\n    if (response.statusCode == 200 || response.statusCode == 201) {\n      // If the server did return a 201 CREATED response,\n      // then parse the JSON.\n      print(\"Recipe Search: ${response.statusCode} \");\n      print(\"Recipe Search: ${response.body} \");\n\n      return (jsonDecode(response.body));\n    } else {\n      print(\"Error searching ${response.statusCode}! ${response.body}\");\n      // If the server did not return a 201 CREATED response,\n      // then throw an exception.\n      throw Exception('Failed to search');\n    }\n  }\n\n\n  static Future<List> getUserRecipes(String UserID) async {\n    print(\"trying \" + UserID);\n\n    final response = await http.post(\n      Uri.parse('https://recipebook5959.herokuapp.com/api/get_recipeList'),\n      headers:<String,String> {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: jsonEncode({\n        \"UserID\": UserID,  //or whatever he makes it\n      }),\n    );\n\n    if (response.statusCode == 200 || response.statusCode == 201) {\n      // If the server did return a 201 CREATED response,\n      // then parse the JSON.\n      print(\"My Recipes: ${response.statusCode} \");\n      print(\"My Recipes: ${response.body} \");\n\n      return (jsonDecode(response.body));\n    } else {\n      print(\"Error getting my recipes ${response.statusCode}! ${response.body}\");\n      // If the server did not return a 201 CREATED response,\n      // then throw an exception.\n      throw Exception('Failed to get my recipes');\n    }\n  }\n\n  static Future<List> getUser(String user) async {\n\n    final response = await http.post(\n      Uri.parse('https://recipebook5959.herokuapp.com/api/search_user'),\n      headers:<String,String> {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: jsonEncode({\n        \"Username\": user,\n      }),\n    );\n\n    if (response.statusCode == 200 || response.statusCode == 201) {\n      // If the server did return a 201 CREATED response,\n      // then parse the JSON.\n      print(\"Recipe Search: ${response.statusCode} \");\n      print(\"Recipe Search: ${response.body} \");\n\n      return (jsonDecode(response.body));\n    } else {\n      print(\"Error searching ${response.statusCode}! ${response.body}\");\n      // If the server did not return a 201 CREATED response,\n      // then throw an exception.\n      throw Exception('Failed to search');\n    }\n  }\n\n\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mobile/lib/utils/getAPI.dart b/mobile/lib/utils/getAPI.dart
--- a/mobile/lib/utils/getAPI.dart	(revision 123bf33ea9be1bb7796079dd5b2597a863474d97)
+++ b/mobile/lib/utils/getAPI.dart	(date 1670350526838)
@@ -99,7 +99,7 @@
     }
 
   }
-  static Future<dynamic> edit(String bio, String newID,String id) async {
+  static Future<dynamic> edit(String bio, String newUsername,String id) async {
 
     final response = await http.patch(
       Uri.parse('https://recipebook5959.herokuapp.com/api/update_user'),
@@ -109,7 +109,7 @@
       body: jsonEncode({
         "id" : id,
         "Bio": bio,
-        "Username": newID,
+        "Username": newUsername,
       }),
     );
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"NONE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0064d454-41f2-4b03-b57f-0a40cfe22973\" name=\"Changes\" comment=\"Updated API connections\">\n      <change afterPath=\"$PROJECT_DIR$/mobile/ios/Podfile\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/mobile/lib/screens/image.dart\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/mobile/macos/Podfile\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/libraries/Dart_Packages.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/libraries/Dart_Packages.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/ios/Flutter/Debug.xcconfig\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/ios/Flutter/Debug.xcconfig\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/ios/Flutter/Release.xcconfig\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/ios/Flutter/Release.xcconfig\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/AddScreen.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/AddScreen.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/CreateAccount.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/CreateAccount.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/EditProfile.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/EditProfile.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/HomeScreen.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/HomeScreen.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/LoginScreen.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/LoginScreen.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/Profile.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/Profile.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/utils/getAPI.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/utils/getAPI.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/macos/Flutter/Flutter-Debug.xcconfig\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/macos/Flutter/Flutter-Debug.xcconfig\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/macos/Flutter/Flutter-Release.xcconfig\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/macos/Flutter/Flutter-Release.xcconfig\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/pubspec.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/pubspec.lock\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/pubspec.yaml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/pubspec.yaml\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"origin/mobile2\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"local_mobile\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2HWEVrwVkreWgQSvYwJXNs0VJih\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\n    <property name=\"io.flutter.reload.alreadyRun\" value=\"true\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"advanced.settings\" />\n    <property name=\"show.migrate.to.gradle.popup\" value=\"false\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/mobile/lib/screens\" />\n      <recent name=\"$PROJECT_DIR$/mobile/lib/assets\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"main.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\">\n      <option name=\"additionalArgs\" value=\"--no-sound-null-safety\" />\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/mobile/lib/main.dart\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0064d454-41f2-4b03-b57f-0a40cfe22973\" name=\"Changes\" comment=\"\" />\n      <created>1668392465683</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1668392465683</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"updated pubsec file with dependencies for getAPI\">\n      <created>1668531704593</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668531704593</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"/\">\n      <created>1668536418840</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668536418840</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"small changes to getAPI.dart\">\n      <created>1668624399152</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668624399152</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"small changes to getAPI.dart\">\n      <created>1668627558755</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668627558755</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Linked sign in page to create account/working on CreateAccount.dart\">\n      <created>1668635152759</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668635152759</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Minor update to CreateAccount\">\n      <created>1668638927927</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668638927927</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Minor update to CreateAccount\">\n      <created>1668639127283</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668639127283</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Minor update to CreateAccount\">\n      <created>1668639867396</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668639867396</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Minor update to CreateAccount\">\n      <created>1668641976201</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668641976201</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Working on mobile homepage\">\n      <created>1668698651911</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668698651911</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"added mongodb.dart skeleton for db connection\">\n      <created>1668731318785</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668731318785</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"deleted files\">\n      <created>1668731456188</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668731456188</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Mobile create account update\">\n      <created>1669597198283</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669597198283</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Mobile create account update\">\n      <created>1669664480567</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669664480567</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"changes to homepage\">\n      <created>1669831197143</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669831197143</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"addscreen\">\n      <created>1669919595179</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669919595180</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Updated homepage\">\n      <created>1670095676411</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670095676411</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Updated homepage\">\n      <created>1670206136537</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670206136537</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Updated homepage\">\n      <created>1670206932896</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670206932896</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Updated homepage\">\n      <created>1670207334028</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670207334028</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Updated API connections\">\n      <created>1670262125270</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670262125270</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Updated API connections\">\n      <created>1670266356460</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670266356460</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Updated API connections\">\n      <created>1670276149832</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670276149832</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Updated API connections\">\n      <created>1670279079171</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670279079171</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Updated API connections\">\n      <created>1670286324738</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670286324738</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Updated API connections\">\n      <created>1670286751250</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670286751250</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"27\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"origin/mobile2\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"origin/mobile2\" />\n                </option>\n              </RecentGroup>\n            </list>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"updated pubsec file with dependencies for getAPI\" />\n    <MESSAGE value=\"/\" />\n    <MESSAGE value=\"small changes to getAPI.dart\" />\n    <MESSAGE value=\"Linked sign in page to create account/working on CreateAccount.dart\" />\n    <MESSAGE value=\"Minor update to CreateAccount\" />\n    <MESSAGE value=\"Working on mobile homepage\" />\n    <MESSAGE value=\"added mongodb.dart skeleton for db connection\" />\n    <MESSAGE value=\"deleted files\" />\n    <MESSAGE value=\"API connectivity issues\" />\n    <MESSAGE value=\"Mobile create account update\" />\n    <MESSAGE value=\"changes to homepage\" />\n    <MESSAGE value=\"addscreen\" />\n    <MESSAGE value=\"Updated homepage\" />\n    <MESSAGE value=\"Updated API connections\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Updated API connections\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\n          <url>file://$PROJECT_DIR$/mobile/lib/utils/getAPI.dart</url>\n          <line>80</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 123bf33ea9be1bb7796079dd5b2597a863474d97)
+++ b/.idea/workspace.xml	(date 1670350526336)
@@ -4,25 +4,10 @@
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0064d454-41f2-4b03-b57f-0a40cfe22973" name="Changes" comment="Updated API connections">
-      <change afterPath="$PROJECT_DIR$/mobile/ios/Podfile" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/mobile/lib/screens/image.dart" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/mobile/macos/Podfile" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/libraries/Dart_Packages.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Dart_Packages.xml" afterDir="false" />
+    <list default="true" id="0064d454-41f2-4b03-b57f-0a40cfe22973" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/ios/Flutter/Debug.xcconfig" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/ios/Flutter/Debug.xcconfig" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/ios/Flutter/Release.xcconfig" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/ios/Flutter/Release.xcconfig" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/mobile/lib/screens/AddScreen.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/AddScreen.dart" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/lib/screens/CreateAccount.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/CreateAccount.dart" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/lib/screens/EditProfile.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/EditProfile.dart" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/lib/screens/HomeScreen.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/HomeScreen.dart" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/lib/screens/LoginScreen.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/LoginScreen.dart" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/lib/screens/Profile.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/Profile.dart" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/mobile/lib/utils/getAPI.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/utils/getAPI.dart" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/macos/Flutter/Flutter-Debug.xcconfig" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/macos/Flutter/Flutter-Debug.xcconfig" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/macos/Flutter/Flutter-Release.xcconfig" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/macos/Flutter/Flutter-Release.xcconfig" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/pubspec.lock" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/pubspec.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/pubspec.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/pubspec.yaml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -70,6 +55,7 @@
     <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
     <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
     <property name="cidr.known.project.marker" value="true" />
+    <property name="dart.analysis.tool.window.visible" value="false" />
     <property name="io.flutter.reload.alreadyRun" value="true" />
     <property name="settings.editor.selected.configurable" value="advanced.settings" />
     <property name="show.migrate.to.gradle.popup" value="false" />
