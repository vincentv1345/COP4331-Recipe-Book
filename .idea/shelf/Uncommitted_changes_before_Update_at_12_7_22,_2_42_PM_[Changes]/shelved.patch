Index: mobile/lib/screens/Profile.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nimport 'package:flutter/material.dart';\nimport 'package:mobile/screens/AddScreen.dart';\nimport 'package:mobile/screens/EditProfile.dart';\nimport 'package:mobile/screens/LoginScreen.dart';\nimport 'package:mobile/utils/getAPI.dart';\nimport 'dart:convert';\n\nimport '../main.dart';\nimport 'CreateAccount.dart';\nimport 'HomeScreen.dart';\nimport 'ViewRecipe.dart';\n\nString message = \"help\", newMessageText = ''; //error messages\nString loginName = '', email = '', password = '';\n\nList<dynamic> recipes = List.empty(growable: true);\nList<dynamic> myRecipes = List.empty(growable: true);\n\nvoid populateProfile() async {\n\n  //Get User Information\n  try {\n    var user = await RecipeData.getUser(GlobalData.userName);\n      GlobalData.bio = user[0][\"Bio\"];\n      GlobalData.email = user[0][\"Email\"];\n      GlobalData.following = user[0][\"Following\"].length;\n\n  }catch(e){\n    print(\"Profile Error Getting User Information\" + e.toString());\n  }\n\n  try {\n    recipes = await RecipeData.search('');\n  }catch(e){\n    print(\"PROFILE ERRORRRRR GETTING RECIPES\" + e.toString());\n  }\n\n  myRecipes = List.empty(growable: true);\n  for (var data in recipes) {\n    print(\"\\n TESTING: \" + data[\"RecipeName\"] + data[\"UserID\"] + GlobalData.userId);\n    if(data[\"UserID\"] == GlobalData.userId){\n      print(\"\\n ADDING: \" + data[\"RecipeName\"] + data[\"UserID\"] + GlobalData.userId);\n      myRecipes.add(data);\n    }\n  }\n}\n\n\n\nclass ProfileScreen extends StatefulWidget {\n  @override\n  _ProfileScreenState createState() => _ProfileScreenState();\n}\n\nclass _ProfileScreenState extends State<ProfileScreen> {\n  @override\n  void initState() {\n    super.initState();\n  }\n\n\n\n  @override\n  Widget build(BuildContext context) {\n    populateProfile();\n    return Scaffold(\n      //   backgroundColor: Colors.blue,\n      body: MainPage(),\n    );\n  }\n}\n\nclass MainPage extends StatefulWidget {\n  @override\n  _MainPageState createState() => _MainPageState();\n}\n\n\nclass _MainPageState extends State<MainPage> {\n\n  changeText() {\n    setState(() {\n      message = newMessageText;\n    });\n  }\n\n  @override\n  void initState() {\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n        decoration: const BoxDecoration(\n          image: DecorationImage(image: AssetImage(\"lib/assets/profilebg.PNG\"), fit: BoxFit.cover),\n        ),\n        width:  MediaQuery.of(context).size.width,\n        height: MediaQuery.of(context).size.height,\n        child:\n        SingleChildScrollView(\n            child:\n\n            Column(\n              mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n              crossAxisAlignment: CrossAxisAlignment.center, //Center Column contents horizontal\n\n              children: <Widget>[\n\n                Container(\n                  margin: const EdgeInsets.only(top: 50, left: 20),\n\n                  child:\n                  Row(\n                    children: <Widget>[\n\n                      Column(\n                          children:<Widget>[\n\n                            const SizedBox(width: 16),\n\n                            FloatingActionButton.small(\n                              backgroundColor: Color(0xff5F2829),\n                              onPressed: () {\n                                Navigator.push(context, new MaterialPageRoute(\n                                    builder: (context) => new HomeScreen())\n                                );\n                              },\n                              child: const Icon(Icons.home),\n                            ),\n                          ]\n                      ),\n\n                      Column(\n                          children:<Widget>[\n\n                            const SizedBox(width: 16),\n\n                            FloatingActionButton.small(\n                              backgroundColor: Color(0xff5F2829),\n                              onPressed: () {\n                                Navigator.push(context, new MaterialPageRoute(\n                                    builder: (context) => new AddScreen())\n                                );\n                              },\n                              child: const Icon(Icons.add),\n                            ),\n                          ]\n                      ),\n\n                      Column(\n                          children:<Widget>[\n\n                            const SizedBox(width: 16),\n\n                            FloatingActionButton.small(\n                              backgroundColor: Color(0xff5F2829),\n                              onPressed: () {\n                                Navigator.push(context, new MaterialPageRoute(\n                                    builder: (context) => new ProfileScreen())\n                                );\n                              },\n                              child: const Icon(Icons.person),\n                            ),\n                          ]\n                      ),\n\n                      Container(\n                        margin: const EdgeInsets.only(top: 0, left: 10),\n                        width: 125,\n                        child:\n                        MaterialButton(\n                            child: Text('Edit Profile',style: TextStyle(fontSize: 18 ,color:Color(0xffF9DEE8))\n                            ),\n\n                           onPressed: () {\n                              Navigator.push(context, new MaterialPageRoute(\n                              builder: (context) => new EditProfileScreen())\n                              );\n                              },\n\n                            color:const Color(0xff5F2829),\n                            shape: RoundedRectangleBorder(borderRadius:BorderRadius.circular(22.0) ),\n                            textColor: Color(0xffF9DEE8),\n                            padding: EdgeInsets.all(2.0),\n                            splashColor: Colors.black\n                        ),\n                      ),\n\n                      MaterialButton(\n                          child: Text('Logout',style: TextStyle(fontSize: 18 ,color:Color(0xffF9DEE8))),\n                          onPressed: ()\n                          {\n                            Navigator.pushNamed(context, '/login');\n                          },\n                          color:const Color(0xff5F2829),\n                          shape: RoundedRectangleBorder(borderRadius:BorderRadius.circular(22.0) ),\n                          textColor: Color(0xffF9DEE8),\n                          padding: EdgeInsets.all(2.0),\n                          splashColor: Colors.black\n                      )\n\n                    ],\n                  ),\n\n                ),\n\n                Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    crossAxisAlignment: CrossAxisAlignment.center,\n                    children: <Widget>[\n                      Container(\n                        margin: const EdgeInsets.only(top: 20),\n                        width: 350,\n                        height: 150,\n                        child:\n                        CircleAvatar(\n                            radius: 80,\n                            backgroundColor: Colors.white,\n                        child: CircleAvatar(\n                            radius: 72,\n\n                            backgroundColor: Colors.transparent,\n                            child: SizedBox(\n\n\n                                child: ClipOval(\n\n                                  child: Image.asset(\"lib/assets/profilepicture.png\",\n                                  ),\n                                )\n                            )\n                        )\n                        )\n                      ),\n                    ]\n                ), //IMAGE\n\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  children: <Widget>[\n                    Text(GlobalData.userName,style: const TextStyle(fontSize: 60 ,color:Colors.black)),\n                  ],\n                ), //NAME\n\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  children: <Widget>[\n                    Container(\n                        margin: const EdgeInsets.only(top: 10),\n                        child:\n                        Text( GlobalData.recipesCount.toString() + ' Recipes   ' + GlobalData.followers.toString() + ' Followers   ' +  GlobalData.following.toString() + ' Following',\n                            style: TextStyle(fontSize: 20 ,color:Colors.black))\n                    ),\n                  ],\n                ),\n\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  children: <Widget>[\n                    Container(\n                        height: 30,\n                        margin: const EdgeInsets.only(top: 15),\n                        child: Text(GlobalData.bio.toString(),\n                            style: TextStyle(fontSize: 17 ,color:Colors.black))\n                    ),\n                  ],\n                ), //bio\n\n                /* Row(\n                  mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n\n                  children: <Widget>[\n                    Container(\n                        margin: const EdgeInsets.only(right: 50),\n                        color: Color(0xffFCF6EC),\n                        child:\n                      TextButton(\n                        child: const Text(\n                          'my recipes',\n                          style: TextStyle(fontSize: 16, color: Color(0xff000000)),\n                        ),\n                        onPressed: () {\n                            print(\"ndfkns\" + GlobalData.loginName);\n\n\n                        },\n                      ),\n                    ),\n\n                    Container(\n                      margin: const EdgeInsets.only(left: 50),\n                      color: Color(0xffFCF6EC),\n                      child:\n                    TextButton(\n                      child: const Text(\n                        'liked recipes',\n                        style: TextStyle(fontSize: 16, color: Color(0xff000000)),\n                      ),\n                      onPressed: () {\n                        //signup screen\n                        Navigator.of(context).push(MaterialPageRoute(\n                            builder: (context) => LoginScreen()));\n                      },)\n                    ),\n\n                  ],\n                ), */   //buttons not used\n\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  children: <Widget>[\n                    Container(\n                        margin: const EdgeInsets.only(top: 20, right: 200, bottom: 0),\n                        child:\n                        const Text('My Recipes',\n                            style: TextStyle(fontSize: 25 ,color:Colors.black))\n                    ),\n                  ],\n                ),\n\n                Container(\n\n\n                  height: MediaQuery.of(context).size.height,\n\n                  child: ListView.builder(\n\n                    // Let the ListView know how many items it needs to build.\n                    itemCount: myRecipes.length,\n                    // Provide a builder function. This is where the magic happens.\n                    // Convert each item into a widget based on the type of item it is.\n                    itemBuilder: (context, index) {\n                      final recipe = myRecipes[index];\n                      print(\"PROFILE PRINTING \" + recipe[\"RecipeName\"]);\n\n                      return\n                        TextButton(\n                          child: Text(recipe[\"RecipeName\"] + \"\\n\",style: TextStyle(fontSize: 20 ,color:Colors.black)),\n                          onPressed: () {\n                            print(recipe);\n\n                            if(recipe[\"RecipeName\"] != null)\n                              currentRecipe.recipeName = recipe[\"RecipeName\"];\n\n                            if(recipe[\"RecipeDirections\"] != null)\n                              currentRecipe.recipeDirections = recipe[\"RecipeDirections\"];\n                            else\n                              currentRecipe.recipeDirections = \"No Directions\";\n\n                            if(recipe[\"RecipeIngredients\"] != null)\n                              currentRecipe.recipeIngredients = recipe[\"RecipeIngredients\"];\n                            else\n                              currentRecipe.recipeIngredients = \"No Ingredients\";\n\n                            print(\"VIEWING \" + currentRecipe.id + currentRecipe.recipeName + currentRecipe.recipeDirections + currentRecipe.recipeIngredients);\n\n                            Navigator.of(context).push(MaterialPageRoute(\n                                builder: (context) => RecipeScreen()));\n                          },);\n                      //Text(recipe[\"RecipeName\"] + \"\\n\",style: TextStyle(fontSize: 20 ,color:Colors.black));\n                    },\n                  ),\n\n\n\n                ),\n\n              ],\n            )\n        )\n    );\n  }\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mobile/lib/screens/Profile.dart b/mobile/lib/screens/Profile.dart
--- a/mobile/lib/screens/Profile.dart	(revision 78e3cae845df62c64d8839d72830e0b3471c0631)
+++ b/mobile/lib/screens/Profile.dart	(date 1670442113681)
@@ -346,6 +346,7 @@
                           onPressed: () {
                             print(recipe);
 
+
                             if(recipe["RecipeName"] != null)
                               currentRecipe.recipeName = recipe["RecipeName"];
 
Index: mobile/lib/screens/ViewRecipe.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import 'package:flutter/material.dart';\nimport 'package:mobile/screens/LoginScreen.dart';\nimport 'package:mobile/utils/getAPI.dart';\nimport 'dart:convert';\n\n\nimport '../main.dart';\nimport 'AddScreen.dart';\nimport 'CreateAccount.dart';\nimport 'HomeScreen.dart';\nimport 'Profile.dart';\n\nString message = \"help\", newMessageText = ''; //error messages\nString loginName = '', email = '', password = '';\n\n\nclass RecipeScreen extends StatefulWidget {\n  @override\n  _RecipeScreenState createState() => _RecipeScreenState();\n}\n\nclass _RecipeScreenState extends State<RecipeScreen> {\n  @override\n  void initState() {\n    super.initState();\n  }\n\n\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      //   backgroundColor: Colors.blue,\n      body: MainPage(),\n    );\n  }\n}\n\nclass MainPage extends StatefulWidget {\n  @override\n  _MainPageState createState() => _MainPageState();\n}\n\n\nclass _MainPageState extends State<MainPage> {\n\n // late final List<ListItem> items;\n\n\n  changeText() {\n    setState(() {\n      message = newMessageText;\n    });\n  }\n\n  @override\n  void initState() {\n    super.initState();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n        padding: EdgeInsets.fromLTRB(20, 0, 20, 0),\n        decoration: const BoxDecoration(\n          image: DecorationImage(image: AssetImage(\"lib/assets/homescreen.png\"), fit: BoxFit.cover),\n        ),\n        width:  MediaQuery.of(context).size.width,\n        height: MediaQuery.of(context).size.height,\n        child:\n        SingleChildScrollView(\n            child:\n\n            Column(\n              mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n              crossAxisAlignment: CrossAxisAlignment.center, //Center Column contents horizontal\n\n              children: <Widget>[\n\n            Container(\n            margin: const EdgeInsets.only(top: 50, left: 10,),\n\n            child:\n            Row(\n              children: <Widget>[\n\n                Column(\n                    children:<Widget>[\n\n                      const SizedBox(width: 16),\n\n                      FloatingActionButton.small(\n                        backgroundColor: Color(0xff5F2829),\n                        onPressed: () {\n                          Navigator.push(context, new MaterialPageRoute(\n                              builder: (context) => new HomeScreen())\n                          );\n                        },\n                        child: const Icon(Icons.home),\n                      ),\n                    ]\n                ),\n\n\n\n                Column(\n                    children:<Widget>[\n\n                      const SizedBox(width: 16),\n\n                      FloatingActionButton.small(\n                        backgroundColor: Color(0xff5F2829),\n                        onPressed: () {\n                          Navigator.push(context, new MaterialPageRoute(\n                              builder: (context) => new AddScreen())\n                          );\n                        },\n                        child: const Icon(Icons.add),\n                      ),\n                    ]\n                ),\n\n\n                Column(\n                    children:<Widget>[\n\n                      const SizedBox(width: 16),\n\n                      FloatingActionButton.small(\n                        backgroundColor: Color(0xff5F2829),\n                        onPressed: () {\n                          Navigator.push(context, new MaterialPageRoute(\n                              builder: (context) => new ProfileScreen())\n                          );\n                        },\n                        child: const Icon(Icons.person),\n                      ),\n                    ]\n                ),\n\n\n             /*   Container(\n                      margin: const EdgeInsets.only(top: 0, left: 50),\n                      width: 125,\n                      child:\n                      MaterialButton(\n                          child: Text('Favorite',style: TextStyle(fontSize: 20 ,color: Colors.white, )\n                          ),\n\n                          onPressed: () async\n                          {\n                            newMessageText = \"\";\n                            changeText();\n                            //add username to payload\n                            //   String payload = '{\"login\":\"' + loginName.trim() + '\",\"password\":\"' + password.trim() + '\"}';\n                            //  var data = {\"login\": loginName ,\"password\": password};\n                            var userId = -1;\n                            var jsonObject;\n\n                            try\n                            {\n\n                              //CHECK to make sure that username is > 0 and other requirements here!!!!!\n\n\n                              String url = 'https://cop4331-10.herokuapp.com/api/create_user'; //http://www.flavordaddy.xyz/\n                              String ret = await RecipeData.signup(loginName.trim(), email.trim(), password.trim());\n                              jsonObject = json.decode(ret);\n                              userId = jsonObject[\"id\"];\n\n                              Navigator.push(\n                                context,\n                                MaterialPageRoute(builder: (context) => HomeScreen()),\n                              );\n                            }\n                            catch(e)\n                            {\n                              newMessageText = \"Incorrect Email or Password\";\n                              changeText();\n                            }\n                          },\n\n                          color: const Color(0xff5F2829),\n                          shape: RoundedRectangleBorder(borderRadius:BorderRadius.circular(22.0) ),\n                          textColor: Colors.white,\n                          padding: EdgeInsets.all(2.0),\n                          splashColor: Colors.black\n                      ),\n                    ),\n*/\n                  ],\n                ), //buttons\n            ),\n\n\n\n\n\n\n                Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    crossAxisAlignment: CrossAxisAlignment.center,\n                    children: <Widget>[\n\n                      Container(\n                        padding: EdgeInsets.all(15), // Border width\n                        decoration: BoxDecoration(color: Colors.transparent,),\n                          margin: const EdgeInsets.only(top: 5),\n                          width: MediaQuery.of(context).size.width - 50,\n                          height: 300,\n\n                          child: ClipRRect(\n                            borderRadius: BorderRadius.circular(8.0),\n\n                            child: Image.asset(\n                              \"lib/assets/food.jpg\",\n                              width: 600.0,\n                              height: 240.0,\n                              fit: BoxFit.cover,\n                            ),\n                          )\n                      )\n                    ]\n                ), //IMAGE //NAME\n\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  children: <Widget>[\n                    Text(currentRecipe.recipeName,style: TextStyle(fontSize: 30 ,fontWeight:FontWeight.bold,color:Colors.black)),\n                  ],\n                ), //NAME\n\n\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  children: <Widget>[\n                    Container(\n                        margin: const EdgeInsets.only(top: 35, right: 200, bottom: 5),\n                        child:\n                        Text('Ingredients',\n                            style: TextStyle(fontSize: 25 ,color:Colors.black))\n                    ),\n                  ],\n                ),\n\n\n                Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    crossAxisAlignment: CrossAxisAlignment.center,\n\n                    children: <Widget>[\n                      Container(\n\n                       // color: Colors.white,\n                        child: Expanded(\n                        flex: 1,\n\n\n                        child: SingleChildScrollView(\n                          scrollDirection: Axis.vertical,\n\n                          child: Text(\n                            currentRecipe.recipeIngredients,\n                            style: const TextStyle(\n                              fontSize: 16.0, color: Colors.black),\n                          ),\n                        ),\n                      ),\n                      ),\n                    ]\n                ),\n\n\n\n                Row(\n                  mainAxisAlignment: MainAxisAlignment.center, //Center Column contents vertically,\n                  crossAxisAlignment: CrossAxisAlignment.center,\n                  children: <Widget>[\n                    Container(\n                        margin: const EdgeInsets.only(top: 35, right: 200, bottom: 5),\n                        child:\n                        const Text('Directions',\n                            style: TextStyle(fontSize: 25 ,color:Colors.black))\n                    ),\n                  ],\n                ),\n\n\n                Row(\n                    mainAxisAlignment: MainAxisAlignment.center,\n                    crossAxisAlignment: CrossAxisAlignment.center,\n                    children: <Widget>[\n                      Container(\n                        // color: Colors.white,\n                        child: Expanded(\n                          flex: 1,\n                          child: SingleChildScrollView(\n                            scrollDirection: Axis.vertical,\n                            child: Text(\n                              currentRecipe.recipeDirections,\n                              style: const TextStyle(\n                                fontSize: 16.0, color: Colors.black, //backgroundColor: Colors.white,\n                              ),\n                            ),\n                          ),\n                        ),\n                      ),\n                    ]\n                ),\n\n\n\n\n\n\n\n\n\n              ],\n            )\n        )\n    );\n  }\n\n\n\n\n\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/mobile/lib/screens/ViewRecipe.dart b/mobile/lib/screens/ViewRecipe.dart
--- a/mobile/lib/screens/ViewRecipe.dart	(revision 78e3cae845df62c64d8839d72830e0b3471c0631)
+++ b/mobile/lib/screens/ViewRecipe.dart	(date 1670442113685)
@@ -137,6 +137,22 @@
                       ),
                     ]
                 ),
+                Column(
+                    children:<Widget>[
+
+                      const SizedBox(width: 16),
+
+                      FloatingActionButton.small(
+                        backgroundColor: Color(0xff5F2829),
+                        onPressed: () {
+                          Navigator.push(context, new MaterialPageRoute(
+                              builder: (context) => new ProfileScreen())
+                          );
+                        },
+                        child: const Icon(Icons.delete),
+                      ),
+                    ]
+                ),
 
 
              /*   Container(
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"NONE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"0064d454-41f2-4b03-b57f-0a40cfe22973\" name=\"Changes\" comment=\"Updated Imageupload\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/CreateAccount.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/CreateAccount.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/ViewRecipe.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/ViewRecipe.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/screens/image.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/screens/image.dart\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/mobile/lib/utils/getAPI.dart\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/mobile/lib/utils/getAPI.dart\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"origin/mobile2\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"local_mobile\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n    <option name=\"RESET_MODE\" value=\"MIXED\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2HWEVrwVkreWgQSvYwJXNs0VJih\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.cidr.known.project.marker\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"cidr.known.project.marker\" value=\"true\" />\n    <property name=\"dart.analysis.tool.window.visible\" value=\"false\" />\n    <property name=\"io.flutter.reload.alreadyRun\" value=\"true\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"advanced.settings\" />\n    <property name=\"show.migrate.to.gradle.popup\" value=\"false\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/mobile/lib/screens\" />\n      <recent name=\"$PROJECT_DIR$/mobile/lib/assets\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"main.dart\" type=\"FlutterRunConfigurationType\" factoryName=\"Flutter\">\n      <option name=\"additionalArgs\" value=\"--no-sound-null-safety\" />\n      <option name=\"filePath\" value=\"$PROJECT_DIR$/mobile/lib/main.dart\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"0064d454-41f2-4b03-b57f-0a40cfe22973\" name=\"Changes\" comment=\"\" />\n      <created>1668392465683</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1668392465683</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"updated pubsec file with dependencies for getAPI\">\n      <created>1668531704593</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668531704593</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"/\">\n      <created>1668536418840</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668536418840</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"small changes to getAPI.dart\">\n      <created>1668624399152</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668624399152</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"small changes to getAPI.dart\">\n      <created>1668627558755</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668627558755</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Linked sign in page to create account/working on CreateAccount.dart\">\n      <created>1668635152759</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668635152759</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Minor update to CreateAccount\">\n      <created>1668638927927</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668638927927</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Minor update to CreateAccount\">\n      <created>1668639127283</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668639127283</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Minor update to CreateAccount\">\n      <created>1668639867396</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668639867396</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Minor update to CreateAccount\">\n      <created>1668641976201</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668641976201</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Working on mobile homepage\">\n      <created>1668698651911</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668698651911</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"added mongodb.dart skeleton for db connection\">\n      <created>1668731318785</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668731318785</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"deleted files\">\n      <created>1668731456188</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1668731456188</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"Mobile create account update\">\n      <created>1669597198283</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669597198283</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"Mobile create account update\">\n      <created>1669664480567</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669664480567</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"changes to homepage\">\n      <created>1669831197143</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669831197143</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"addscreen\">\n      <created>1669919595179</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1669919595180</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Updated homepage\">\n      <created>1670095676411</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670095676411</updated>\n    </task>\n    <task id=\"LOCAL-00018\" summary=\"Updated homepage\">\n      <created>1670206136537</created>\n      <option name=\"number\" value=\"00018\" />\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670206136537</updated>\n    </task>\n    <task id=\"LOCAL-00019\" summary=\"Updated homepage\">\n      <created>1670206932896</created>\n      <option name=\"number\" value=\"00019\" />\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670206932896</updated>\n    </task>\n    <task id=\"LOCAL-00020\" summary=\"Updated homepage\">\n      <created>1670207334028</created>\n      <option name=\"number\" value=\"00020\" />\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670207334028</updated>\n    </task>\n    <task id=\"LOCAL-00021\" summary=\"Updated API connections\">\n      <created>1670262125270</created>\n      <option name=\"number\" value=\"00021\" />\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670262125270</updated>\n    </task>\n    <task id=\"LOCAL-00022\" summary=\"Updated API connections\">\n      <created>1670266356460</created>\n      <option name=\"number\" value=\"00022\" />\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670266356460</updated>\n    </task>\n    <task id=\"LOCAL-00023\" summary=\"Updated API connections\">\n      <created>1670276149832</created>\n      <option name=\"number\" value=\"00023\" />\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670276149832</updated>\n    </task>\n    <task id=\"LOCAL-00024\" summary=\"Updated API connections\">\n      <created>1670279079171</created>\n      <option name=\"number\" value=\"00024\" />\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670279079171</updated>\n    </task>\n    <task id=\"LOCAL-00025\" summary=\"Updated API connections\">\n      <created>1670286324738</created>\n      <option name=\"number\" value=\"00025\" />\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670286324738</updated>\n    </task>\n    <task id=\"LOCAL-00026\" summary=\"Updated API connections\">\n      <created>1670286751250</created>\n      <option name=\"number\" value=\"00026\" />\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670286751250</updated>\n    </task>\n    <task id=\"LOCAL-00027\" summary=\"Updated Imageupload connections\">\n      <created>1670375706774</created>\n      <option name=\"number\" value=\"00027\" />\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670375706774</updated>\n    </task>\n    <task id=\"LOCAL-00028\" summary=\"Updated Imageupload\">\n      <created>1670381685031</created>\n      <option name=\"number\" value=\"00028\" />\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1670381685031</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"29\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"origin/mobile2\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"RECENT_FILTERS\">\n      <map>\n        <entry key=\"Branch\">\n          <value>\n            <list>\n              <RecentGroup>\n                <option name=\"FILTER_VALUES\">\n                  <option value=\"origin/mobile2\" />\n                </option>\n              </RecentGroup>\n            </list>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\n    <MESSAGE value=\"updated pubsec file with dependencies for getAPI\" />\n    <MESSAGE value=\"/\" />\n    <MESSAGE value=\"small changes to getAPI.dart\" />\n    <MESSAGE value=\"Linked sign in page to create account/working on CreateAccount.dart\" />\n    <MESSAGE value=\"Minor update to CreateAccount\" />\n    <MESSAGE value=\"Working on mobile homepage\" />\n    <MESSAGE value=\"added mongodb.dart skeleton for db connection\" />\n    <MESSAGE value=\"deleted files\" />\n    <MESSAGE value=\"API connectivity issues\" />\n    <MESSAGE value=\"Mobile create account update\" />\n    <MESSAGE value=\"changes to homepage\" />\n    <MESSAGE value=\"addscreen\" />\n    <MESSAGE value=\"Updated homepage\" />\n    <MESSAGE value=\"Updated API connections\" />\n    <MESSAGE value=\"Updated Imageupload connections\" />\n    <MESSAGE value=\"Updated Imageupload\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Updated Imageupload\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"Dart\">\n          <url>file://$PROJECT_DIR$/mobile/lib/utils/getAPI.dart</url>\n          <line>81</line>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 78e3cae845df62c64d8839d72830e0b3471c0631)
+++ b/.idea/workspace.xml	(date 1670442114066)
@@ -4,12 +4,10 @@
     <option name="autoReloadType" value="NONE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="0064d454-41f2-4b03-b57f-0a40cfe22973" name="Changes" comment="Updated Imageupload">
+    <list default="true" id="0064d454-41f2-4b03-b57f-0a40cfe22973" name="Changes" comment="update">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/lib/screens/CreateAccount.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/CreateAccount.dart" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/mobile/lib/screens/Profile.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/Profile.dart" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/mobile/lib/screens/ViewRecipe.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/ViewRecipe.dart" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/lib/screens/image.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/screens/image.dart" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/mobile/lib/utils/getAPI.dart" beforeDir="false" afterPath="$PROJECT_DIR$/mobile/lib/utils/getAPI.dart" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -280,7 +278,14 @@
       <option name="project" value="LOCAL" />
       <updated>1670381685031</updated>
     </task>
-    <option name="localTasksCounter" value="29" />
+    <task id="LOCAL-00029" summary="update">
+      <created>1670436434545</created>
+      <option name="number" value="00029" />
+      <option name="presentableId" value="LOCAL-00029" />
+      <option name="project" value="LOCAL" />
+      <updated>1670436434545</updated>
+    </task>
+    <option name="localTasksCounter" value="30" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -339,7 +344,8 @@
     <MESSAGE value="Updated API connections" />
     <MESSAGE value="Updated Imageupload connections" />
     <MESSAGE value="Updated Imageupload" />
-    <option name="LAST_COMMIT_MESSAGE" value="Updated Imageupload" />
+    <MESSAGE value="update" />
+    <option name="LAST_COMMIT_MESSAGE" value="update" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
